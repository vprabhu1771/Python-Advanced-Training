In Python, you can use the `os` module to execute system commands, including shutting down the computer. However, keep in mind that shutting down a computer might require administrative privileges, so your script may need to be run with elevated permissions.

Here's an example of how you can use the `os` module to shut down a computer:

```python
import os

# Check if the operating system is Windows
if os.name == 'nt':
    os.system('shutdown /s /t 1')  # /s parameter for shutdown, /t parameter for the time delay (1 second in this case)
    
# Check if the operating system is Unix/Linux
elif os.name == 'posix':
    os.system('shutdown now')  # 'now' for immediate shutdown
    
# For macOS
elif os.name == 'mac':
    os.system('sudo shutdown -h now')  # 'sudo' for elevated permissions, '-h' for halt, 'now' for immediate shutdown

# If the operating system is not recognized
else:
    print("Unsupported operating system")

```

Remember to run the script with the necessary permissions. On Unix/Linux systems, you might need to run it with `sudo`.

Keep in mind that abruptly shutting down a computer may result in data loss, so use this functionality carefully. If your script is part of a larger application, consider providing a warning or confirmation to the user before initiating a shutdown.